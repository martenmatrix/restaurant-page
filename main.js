(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>h});var o=t(15),r=t.n(o),a=t(645),i=t.n(a),c=t(667),A=t.n(c),l=new URL(t(291),t.b),d=new URL(t(74),t.b),s=new URL(t(335),t.b),u=new URL(t(900),t.b),p=i()(r()),m=A()(l),f=A()(d),g=A()(s),C=A()(u);p.push([n.id,"@font-face {\n    font-family: 'Allison';\n    src: url("+m+");\n}\n\n@font-face {\n    font-family: 'Garamond';\n    src: url("+f+");\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url("+g+");\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n\n    cursor: url("+C+"), auto;\n}\n\nh1 {\n    font-family: 'Allison';\n    margin: 0;\n    padding: 0;\n}\n\nbutton {\n    font-family: 'Roboto';\n    font-weight: bold;\n    font-size: 1em;\n\n    width: 10rem;\n    cursor: pointer;\n\n    color: white;\n    background-color: black;\n    border: solid 3px white;\n    padding: 1rem 2rem 1rem 2rem;\n    margin-top: 1em;\n\n    transition: background-color 300ms, color 300ms;\n\n}\n\nbutton:hover {\n    background-color: white;\n    color: black;\n}\n\n#about {\n    display: flex;\n    flex-direction: row;\n}\n\n.description {\n    font-family: 'Garamond';\n}\n\n.left-part {\n    color: white;\n    background-color: black;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    padding-right: 2rem;\n    flex-grow: 1;\n    height: 100vh;\n\n    box-shadow: 20px 0 5px 0 rgba(0, 0, 0, 0.8);\n    z-index: 1;\n}\n\n.right-part img{\n    height: 100vh;\n    width: 70vh;\n}\n\n.left-part p {\n    width: 50%;\n}\n\n@media only screen and (max-width: 1000px) {\n    .right-part img {\n        display: none;\n    }\n\n    .left-part {\n        padding: 1rem;\n    }\n}\n\n\n/*Menu*/\n#menu {\n    list-style: none;\n    padding: 0;\n\n    display: flex;\n\n    position: absolute;\n\n    margin-top: 70vh;\n    left: 10%;\n}\n\n#menu li {\n    padding: 2em;\n    cursor: pointer;\n    \n    font-family: 'Roboto';\n    color: white;\n}\n\n#menu li:hover {\n    opacity: 80%;\n}\n\n.underline {\n    text-decoration: underline;\n}\n\n/*Product*/\n.products {\n    display: flex;\n}\n\n.product {\n    text-align: center;\n    \n    width: 10rem;\n\n    border: solid 1px rgba(255, 255, 255, 0.2);\n    background-color: rgba(255, 255, 255, 0.1);\n    \n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n\n    margin-left: 2em;\n}\n\n.product img {\n    margin-top: 0.5rem;\n    background-color: rgba(128, 128, 128, 0.2);\n    width: 125px;\n}\n\n.product p {\n    font-family: 'Garamond';\n}\n\n/*Contact*/\n.contact {\n    border: solid 1px rgba(255, 255, 255, 0.2);\n    width: 35rem;\n    \n    margin-left: 10rem;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n    flex-direction: column;\n}\n\n.contact img {\n    width: 30rem;\n    padding: 2em;\n}\n\n.contact p {\n    font-family: 'Roboto';\n    align-self: flex-start;\n    margin-left: 2.5em;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,4CAA+B;AACnC;;AAEA;IACI,uBAAuB;IACvB,4CAAgC;AACpC;;AAEA;IACI,qBAAqB;IACrB,4CAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;;IAEV,qDAA2C;AAC/C;;AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,qBAAqB;IACrB,iBAAiB;IACjB,cAAc;;IAEd,YAAY;IACZ,eAAe;;IAEf,YAAY;IACZ,uBAAuB;IACvB,uBAAuB;IACvB,4BAA4B;IAC5B,eAAe;;IAEf,+CAA+C;;AAEnD;;AAEA;IACI,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;;IAEvB,mBAAmB;IACnB,YAAY;IACZ,aAAa;;IAEb,2CAA2C;IAC3C,UAAU;AACd;;AAEA;IACI,aAAa;IACb,WAAW;AACf;;AAEA;IACI,UAAU;AACd;;AAEA;IACI;QACI,aAAa;IACjB;;IAEA;QACI,aAAa;IACjB;AACJ;;;AAGA,OAAO;AACP;IACI,gBAAgB;IAChB,UAAU;;IAEV,aAAa;;IAEb,kBAAkB;;IAElB,gBAAgB;IAChB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,eAAe;;IAEf,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA,UAAU;AACV;IACI,aAAa;AACjB;;AAEA;IACI,kBAAkB;;IAElB,YAAY;;IAEZ,0CAA0C;IAC1C,0CAA0C;;IAE1C,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;;IAEtB,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,0CAA0C;IAC1C,YAAY;AAChB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA,UAAU;AACV;IACI,0CAA0C;IAC1C,YAAY;;IAEZ,kBAAkB;;IAElB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,sBAAsB;IACtB,kBAAkB;AACtB",sourcesContent:["@font-face {\n    font-family: 'Allison';\n    src: url('./fonts/Allison.ttf');\n}\n\n@font-face {\n    font-family: 'Garamond';\n    src: url('./fonts/Garamond.ttf');\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('./fonts/Roboto.ttf');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n\n    cursor: url('./img/pizza-cursor.png'), auto;\n}\n\nh1 {\n    font-family: 'Allison';\n    margin: 0;\n    padding: 0;\n}\n\nbutton {\n    font-family: 'Roboto';\n    font-weight: bold;\n    font-size: 1em;\n\n    width: 10rem;\n    cursor: pointer;\n\n    color: white;\n    background-color: black;\n    border: solid 3px white;\n    padding: 1rem 2rem 1rem 2rem;\n    margin-top: 1em;\n\n    transition: background-color 300ms, color 300ms;\n\n}\n\nbutton:hover {\n    background-color: white;\n    color: black;\n}\n\n#about {\n    display: flex;\n    flex-direction: row;\n}\n\n.description {\n    font-family: 'Garamond';\n}\n\n.left-part {\n    color: white;\n    background-color: black;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    padding-right: 2rem;\n    flex-grow: 1;\n    height: 100vh;\n\n    box-shadow: 20px 0 5px 0 rgba(0, 0, 0, 0.8);\n    z-index: 1;\n}\n\n.right-part img{\n    height: 100vh;\n    width: 70vh;\n}\n\n.left-part p {\n    width: 50%;\n}\n\n@media only screen and (max-width: 1000px) {\n    .right-part img {\n        display: none;\n    }\n\n    .left-part {\n        padding: 1rem;\n    }\n}\n\n\n/*Menu*/\n#menu {\n    list-style: none;\n    padding: 0;\n\n    display: flex;\n\n    position: absolute;\n\n    margin-top: 70vh;\n    left: 10%;\n}\n\n#menu li {\n    padding: 2em;\n    cursor: pointer;\n    \n    font-family: 'Roboto';\n    color: white;\n}\n\n#menu li:hover {\n    opacity: 80%;\n}\n\n.underline {\n    text-decoration: underline;\n}\n\n/*Product*/\n.products {\n    display: flex;\n}\n\n.product {\n    text-align: center;\n    \n    width: 10rem;\n\n    border: solid 1px rgba(255, 255, 255, 0.2);\n    background-color: rgba(255, 255, 255, 0.1);\n    \n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n\n    margin-left: 2em;\n}\n\n.product img {\n    margin-top: 0.5rem;\n    background-color: rgba(128, 128, 128, 0.2);\n    width: 125px;\n}\n\n.product p {\n    font-family: 'Garamond';\n}\n\n/*Contact*/\n.contact {\n    border: solid 1px rgba(255, 255, 255, 0.2);\n    width: 35rem;\n    \n    margin-left: 10rem;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n    flex-direction: column;\n}\n\n.contact img {\n    width: 30rem;\n    padding: 2em;\n}\n\n.contact p {\n    font-family: 'Roboto';\n    align-self: flex-start;\n    margin-left: 2.5em;\n}"],sourceRoot:""}]);const h=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,o){"string"==typeof n&&(n=[[null,n,""]]);var r={};if(o)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(r[i]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&r[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),e.push(A))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}n.exports=function(n){var t,o,r=(o=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var o,r,a=[],i=!0,c=!1;try{for(t=t.call(n);!(i=(o=t.next()).done)&&(a.push(o.value),!e||a.length!==e);i=!0);}catch(n){c=!0,r=n}finally{try{i||null==t.return||t.return()}finally{if(c)throw r}}return a}}(t,o)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(n,t):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[1],i=r[3];if(!i)return a;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),l="/*# ".concat(A," */"),d=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[a].concat(d).concat([l]).join("\n")}return[a].join("\n")}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],l=o.base?A[0]+o.base:A[0],d=a[l]||0,s="".concat(l," ").concat(d);a[l]=d+1;var u=t(s),p={css:A[1],media:A[2],sourceMap:A[3]};-1!==u?(e[u].references++,e[u].updater(p)):e.push({identifier:s,updater:r(p,o),references:1}),i.push(s)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var A=o(n,r),l=0;l<a.length;l++){var d=t(a[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o=t.css,r=t.media,a=t.sourceMap;r?n.setAttribute("media",r):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},291:(n,e,t)=>{n.exports=t.p+"1e6ba6ff5bfbe738a9aa.ttf"},74:(n,e,t)=>{n.exports=t.p+"2a1da2dbe7a28d63f8cb.ttf"},335:(n,e,t)=>{n.exports=t.p+"a8d6ac03c7b96b7acb62.ttf"},428:(n,e,t)=>{n.exports=t.p+"c9fb971c4f44046fff58.png"},900:(n,e,t)=>{n.exports=t.p+"67b0b8504ac12c463183.png"},487:(n,e,t)=>{n.exports=t.p+"bb690100366534d601a0.jpg"},637:(n,e,t)=>{n.exports=t.p+"fd6eed87f01789f0fd56.png"},127:(n,e,t)=>{n.exports=t.p+"b20e275c4edaa0c35209.png"},375:(n,e,t)=>{n.exports=t.p+"a7b4a7315534d6be2fc0.png"},418:(n,e,t)=>{n.exports=t.p+"f41a28e020f27ecf0bda.png"},369:(n,e,t)=>{n.exports=t.p+"be09e965318a07048c3c.png"},283:(n,e,t)=>{n.exports=t.p+"c7af776fc60a7db71306.png"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),c=t(565),A=t.n(c),l=t(216),d=t.n(l),s=t(589),u=t.n(s),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var f=t(487),g=t(428);const C=[{title:"Bolognese",image:t(127),description:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore, voluptate."},{title:"Bistecca",image:t(637),description:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore, voluptate."},{title:"Central",image:t(375),description:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore, voluptate."},{title:"Napoli",image:t(418),description:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore, voluptate."},{title:"Orlando",image:t(369),description:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore, voluptate."},{title:"Pasadena",image:t(283),description:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore, voluptate."}],h=function(){const n=document.querySelector("#content"),e=document.createElement("about");e.id="about",n.appendChild(e);const t=document.createElement("div");t.classList.add("left-part"),e.appendChild(t);const o=document.createElement("div");o.classList.add("right-part"),e.appendChild(o);const r=document.createElement("img");r.src=f,r.type="img/jpg",o.appendChild(r);const a=document.createElement("ul");a.id="menu",["Home","Contact","Menu"].forEach(((n,e)=>{const t=document.createElement("li");t.textContent=n,a.appendChild(t),0===e&&t.classList.add("underline")})),t.appendChild(a);const i=document.createElement("div");return i.id="delete",t.appendChild(i),{homepage:function(){const n=document.createElement("h1");n.textContent="Marten's Pizza Restaurant",i.appendChild(n);const r=document.createElement("p");r.classList.add("description"),r.textContent="Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat ducimus voluptates numquam est aperiam expedita molestias, ipsam eaque itaque fugit aliquid! Sed similique deserunt expedita ea repellendus corporis. Veritatis, quaerat.",i.appendChild(r);const a=document.createElement("button");a.textContent="Book now",i.appendChild(a),e.appendChild(t),e.appendChild(o)},foodMenu:function(){const n=document.createElement("div");n.classList.add("products"),i.appendChild(n),C.forEach((e=>{const t=document.createElement("div");t.classList.add("product"),n.appendChild(t);const o=document.createElement("h1");o.textContent=e.title,t.appendChild(o);const r=document.createElement("img");r.src=e.image,t.appendChild(r);const a=document.createElement("p");a.textContent=e.description,t.appendChild(a)}))},contact:function(){const n=document.createElement("div");n.classList.add("contact"),i.appendChild(n);const e=document.createElement("img");e.src=g,n.appendChild(e);const t=document.createElement("p");t.textContent="☎ +123 4567890",n.appendChild(t)},deleteLeftPart:function(){i.textContent=""}}}();h.homepage();const b=document.querySelectorAll("#menu li");function B(n){b.forEach((n=>n.classList.remove("underline"))),n.target.classList.add("underline"),h.deleteLeftPart();let e=n.target.textContent;"Home"===e?h.homepage():"Contact"===e?h.contact():"Menu"===e&&h.foodMenu()}b.forEach((n=>n.addEventListener("click",B)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,